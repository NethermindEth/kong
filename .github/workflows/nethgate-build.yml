name: Nethgate Build

on:
  workflow_dispatch:
env:
  GH_TOKEN: ${{ github.token }}

jobs:
  nethgate-build:
    name: Build and push
    runs-on: ubuntu-22.04

    steps:
      - name: Install Prerequisites
        run: |
          sudo apt-get -y update
          sudo apt-get -y install ca-certificates curl gnupg lsb-release jq libyaml-dev net-tools
          sudo mkdir -p /etc/apt/keyrings
          curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
          echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin

      - name: Clone Source Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Determine version numbers
        id: determine-version
        uses: paulhatch/semantic-version@v5.2.1
        with:
          # The prefix to use to identify tags
          tag_prefix: "v"
          # A string which, if present in a git commit, indicates that a change represents a
          # major (breaking) change, supports regular expressions wrapped with '/'
          major_pattern: "(MAJOR)"
          # A string which indicates the flags used by the `major_pattern` regular expression. Supported flags: idgs
          major_regexp_flags: ""
          # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
          minor_pattern: "(MINOR)"
          # A string which indicates the flags used by the `minor_pattern` regular expression. Supported flags: idgs
          minor_regexp_flags: ""
          # A string to determine the format of the version output
          version_format: "${major}.${minor}.${patch}"
          # If this is set to true, *every* commit will be treated as a new version.
          bump_each_commit: false
          # If bump_each_commit is also set to true, setting this value will cause the version to increment only if the pattern specified is matched.
          bump_each_commit_patch_pattern: ""
          # If true, the body of commits will also be searched for major/minor patterns to determine the version type.
          search_commit_body: false
          # The output method used to generate list of users, 'csv' or 'json'.
          user_format_type: "csv"
          # Prevents pre-v1.0.0 version from automatically incrementing the major version.
          # If enabled, when the major version is 0, major releases will be treated as minor and minor as patch. Note that the version_type output is unchanged.
          enable_prerelease_mode: true
          # If enabled, diagnostic information will be added to the action output.
          debug: true

  
      - name: Build Debian Package
        run: |
          make package/deb
          mv bazel-bin/pkg/kong.amd64.deb .

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.GHA_DOCKERHUB_PUSH_USER }}
          password: ${{ secrets.GHA_KONG_ORG_DOCKERHUB_PUSH_TOKEN }}

      - name: Build Docker Image
        uses: docker/build-push-action@v3
        with:
          file: build/dockerfiles/deb.Dockerfile
          context: .
          build-args: |
            KONG_BASE_IMAGE=ubuntu:22.04
            KONG_ARTIFACT_PATH=./
            KONG_VERSION=${{ steps.determine-version.outputs.version }}
          push: true
          tags: nethermindeth/nethgate-kong-base:${{ steps.determine-version.outputs.version }}-ubuntu